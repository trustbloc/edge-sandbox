#
# SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3'

services:

  router.agent.example.com:
    container_name: router.agent.example.com
    image: ${ARIES_AGENT_REST_IMAGE}:${ARIES_AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${DIDCOMM_ROUTER_HOST}:${DIDCOMM_ROUTER_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${DIDCOMM_ROUTER_HOST}:${DIDCOMM_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@${DIDCOMM_ROUTER_HOST}:${DIDCOMM_ROUTER_WS_INBOUND_PORT}
      # TODO https://github.com/trustbloc/edge-sandbox/issues/392 Expose multiple ports per virtual host
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@http://router.agent.example.com:${DIDCOMM_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@ws://localhost:${DIDCOMM_ROUTER_WS_INBOUND_PORT}
      - ARIESD_DB_PATH=${DIDCOMM_ROUTER_DB_PATH}
      - ARIESD_DEFAULT_LABEL=trustbloc-router-agent
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_AUTO_ACCEPT=true
      - VIRTUAL_HOST=router.trustbloc.local
      - VIRTUAL_PORT=${DIDCOMM_ROUTER_API_PORT}
    ports:
      - ${DIDCOMM_ROUTER_HTTP_INBOUND_PORT}:${DIDCOMM_ROUTER_HTTP_INBOUND_PORT}
      - ${DIDCOMM_ROUTER_WS_INBOUND_PORT}:${DIDCOMM_ROUTER_WS_INBOUND_PORT}
      - ${DIDCOMM_ROUTER_API_PORT}:${DIDCOMM_ROUTER_API_PORT}
    command: start
    networks:
      - demo-net

  issuer.adapter.rest.example.com:
    container_name: issuer.adapter.rest.example.com
    image: ${ISSUER_ADAPTER_REST_IMAGE}:${ISSUER_ADAPTER_REST_IMAGE_TAG}
    environment:
      - ADAPTER_REST_HOST_URL=${ISSUER_ADAPTER_HOST}:${ISSUER_ADAPTER_PORT}
      - ADAPTER_REST_TLS_CACERTS=/etc/tls/trustbloc-dev-ca.crt
      - ADAPTER_REST_TLS_SYSTEMCERTPOOL=true
      - ADAPTER_REST_TLS_SERVE_CERT=/etc/tls/trustbloc.local.crt
      - ADAPTER_REST_TLS_SERVE_KEY=/etc/tls/trustbloc.local.key
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST=${ISSUER_ADAPTER_HOST}:${ISSUER_ADAPTER_DIDCOMM_PORT}
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST_EXTERNAL=https://issuer-adapter.trustbloc.local
      - ADAPTER_REST_TRUSTBLOC_DOMAIN=${BLOC_DOMAIN}
      - ADAPTER_REST_UNIVERSAL_RESOLVER_URL=https://did-resolver.trustbloc.local/1.0/identifiers
      - VIRTUAL_HOST=issuer-adapter.trustbloc.local
      - VIRTUAL_PORT=${ISSUER_ADAPTER_DIDCOMM_PORT}
      - ADAPTER_REST_DSN=mysql://issueradapter:issueradapter-secret-pw@tcp(mysql:3306)/
    ports:
      - ${ISSUER_ADAPTER_PORT}:${ISSUER_ADAPTER_PORT}
      - ${ISSUER_ADAPTER_DIDCOMM_PORT}:${ISSUER_ADAPTER_DIDCOMM_PORT}
    entrypoint: ""
    command:  /bin/sh -c "sleep 20;/tmp/scripts/didcomm/issuer_adapter_configure.sh& adapter-rest start"
    volumes:
      - ../keys/tls:/etc/tls
      - ../scripts/:/tmp/scripts
    networks:
      - demo-net
    depends_on:
      - mysql

  rp.adapter.rest.example.com:
    container_name: rp.adapter.rest.example.com
    image: ${RP_ADAPTER_REST_IMAGE}:${RP_ADAPTER_REST_IMAGE_TAG}
    environment:
      - ADAPTER_REST_HOST_URL=${RP_ADAPTER_HOST}:${RP_ADAPTER_PORT}
      - ADAPTER_REST_TLS_CACERTS=/etc/tls/trustbloc-dev-ca.crt
      - ADAPTER_REST_TLS_SYSTEMCERTPOOL=true
      - ADAPTER_REST_TLS_SERVE_CERT=/etc/tls/trustbloc.local.crt
      - ADAPTER_REST_TLS_SERVE_KEY=/etc/tls/trustbloc.local.key
      - ADAPTER_REST_DSN=mysql://rpadapter:rpadapter-secret-pw@tcp(mysql:3306)/
      - ADAPTER_REST_OP_URL=http://TODO.example.com   # TODO currently unused: https://github.com/trustbloc/edge-adapter/issues/24
      - ADAPTER_REST_PRESENTATION_DEFINITIONS_FILE=/etc/testdata/presentationdefinitions.json
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST=${RP_ADAPTER_HOST}:${RP_ADAPTER_DIDCOMM_PORT}
      - ADAPTER_REST_DIDCOMM_INBOUND_HOST_EXTERNAL=https://rp-adapter.trustbloc.local
      - ADAPTER_REST_TRUSTBLOC_DOMAIN=${BLOC_DOMAIN}
      - ADAPTER_REST_UNIVERSAL_RESOLVER_URL=https://did-resolver.trustbloc.local/1.0/identifiers
      - ADAPTER_REST_HYDRA_URL=https://rp-adapter-hydra.trustbloc.local:${RPADAPTER_HYDRA_ADMIN_PORT}
      - VIRTUAL_HOST=rp-adapter.trustbloc.local
      - VIRTUAL_PORT=${RP_ADAPTER_DIDCOMM_PORT}
    ports:
      - ${RP_ADAPTER_PORT}:${RP_ADAPTER_PORT}
      - ${RP_ADAPTER_DIDCOMM_PORT}:${RP_ADAPTER_DIDCOMM_PORT}
    entrypoint: ""
    command:  /bin/sh -c "adapter-rest start"
    volumes:
      - ../keys/tls:/etc/tls
      - ./adapter-config/rp:/etc/testdata
    networks:
      - demo-net
    depends_on:
      - rp-adapter-hydra.trustbloc.local
      - mysql

  rp-adapter-hydra.trustbloc.local:
    container_name: rp-adapter-hydra.trustbloc.local
    image: oryd/hydra:v1.3.2-alpine
    ports:
      - ${RPADAPTER_HYDRA_PUBLIC_PORT}:${RPADAPTER_HYDRA_PUBLIC_PORT}
      - ${RPADAPTER_HYDRA_ADMIN_PORT}:${RPADAPTER_HYDRA_ADMIN_PORT}
    command:  /bin/sh -c "hydra migrate sql --read-from-env --yes; hydra serve all"
    entrypoint: ""
    environment:
      - DSN=mysql://rpadapterhydra:secret@tcp(mysql:3306)/rpadapter_hydra?max_conns=20&max_idle_conns=4
      - URLS_SELF_ISSUER=https://rp-adapter-hydra.trustbloc.local:${RPADAPTER_HYDRA_PUBLIC_PORT}
      - URLS_CONSENT=https://rp-adapter.trustbloc.local:${RP_ADAPTER_PORT}/consent
      - URLS_LOGIN=https://rp-adapter.trustbloc.local:${RP_ADAPTER_PORT}/login
      - SECRETS_SYSTEM=testSecretsSystem
      - OIDC_SUBJECT_TYPES_SUPPORTED=public
      - OIDC_SUBJECT_TYPE_PAIRWISE_SALT=testSecretsSystem
      - SERVE_PUBLIC_PORT=${RPADAPTER_HYDRA_PUBLIC_PORT}
      - SERVE_ADMIN_PORT=${RPADAPTER_HYDRA_ADMIN_PORT}
      - SERVE_TLS_KEY_PATH=/etc/tls/trustbloc.local.key
      - SERVE_TLS_CERT_PATH=/etc/tls/trustbloc.local.crt
      - VIRTUAL_HOST=rp-adapter-hydra.trustbloc.local
      - VIRTUAL_PORT=${RPADAPTER_HYDRA_PUBLIC_PORT}
    restart: unless-stopped
    volumes:
      - ../keys/tls:/etc/tls
    depends_on:
      - mysql
    networks:
      - demo-net
